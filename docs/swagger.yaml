openapi: 3.0.0
servers:
  - description: Localhost
    url: 'http://localhost:8080'
info:
  description: API for distribution of update notifications by means of publish / subscribe.
  version: 0.1.0
  title: WT updates API
paths:
  /:
    get:
      summary: API info
      responses:
        '200':
          description: Basic information about this API instance.
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: string
                    description: Link to the API documentation.
                  info:
                    type: string
                    description: Link to more information about the API.
                  version:
                    type: string
                    description: Deployed API version number.
                  config:
                    type: string
                    description: Which config is the API using.
  /notifications:
    post:
      summary: Publish an update notification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '204':
          description: Notification has been accepted and processed.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
  /subscriptions:
    post:
      summary: Create a subscription to get notifications.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '201':
          description: Subscription has been successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptionId:
                    type: string
                    description: ID of the created subscription.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
  '/subscriptions/{subscriptionId}':
    parameters:
      - name: subscriptionId
        required: true
        in: path
        description: Subscription ID as returned by POST /subscriptions
        schema:
          type: string
    delete:
      summary: Cancel subscription.
      responses:
        '204':
          description: Subscription was successfully cancelled.
        '404':
          $ref: '#/components/responses/NotFoundError'
components:
  responses:
    BadRequestError:
      description: The server does not understand the request (HTTP code 400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntityError:
      description: Request body or params validation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    HotelSubjects:
      type: array
      items:
        type: string
        enum:
          - ratePlans
          - availability
          - description
          - dataIndex
          - onChain
    CreatedScope:
      type: object
      description: Resource creation scope.
      required:
        - action
      properties:
        action:
          type: string
          enum:
            - create
    DeletedScope:
      type: object
      description: Resource deletion scope.
      required:
        - action
      properties:
        action:
          type: string
          enum:
            - delete
    UpdatedScope:
      type: object
      description: Resource update scope.
      required:
        - action
      properties:
        action:
          type: string
          enum:
            - update
        subjects:
          description: A list of updated resouce properties.
          oneOf:
            - $ref: '#/components/schemas/HotelSubjects'
    Notification:
      type: object
      description: A single update notification.
      required:
        - wtIndex
        - resourceType
        - resourceAddress
        - scope
      properties:
        wtIndex:
          description: Helps to uniquely identify the resource in question.
          type: string
        resourceType:
          description: Specifies the type of resource (hotel, ...) to be followed. (We assume multiple resource types will exist in the future.)
          type: string
          enum:
            - hotel
        resourceAddress:
          description: Limit subscription to a specific resource (e.g. a specific hotel).
          type: string
        scope:
          description: Denote the scope of the notification.
          oneOf:
            - $ref: '#/components/schemas/CreatedScope'
            - $ref: '#/components/schemas/DeletedScope'
            - $ref: '#/components/schemas/UpdatedScope'
    Subscription:
      type: object
      description: A single update notification.
      required:
        - wtIndex
        - resourceType
        - url
      properties:
        wtIndex:
          description: Helps to uniquely identify the resource in question.
          type: string
        resourceType:
          description: Specifies the type of resource (hotel, ...) to be followed. (We assume multiple resource types will exist in the future.)
          type: string
          enum:
            - hotel
        resourceAddress:
          description: Limit subscription to a specific resource (e.g. a specific hotel).
          type: string
        scope:
          description: Select the notification scope.
          oneOf:
            - $ref: '#/components/schemas/CreatedScope'
            - $ref: '#/components/schemas/DeletedScope'
            - $ref: '#/components/schemas/UpdatedScope'
        url:
          description: URL of the endpoint notifications will be relayed to.
          type: string
    Error:
      title: Error
      description: Default schema for errors returned by API.
      properties:
        status:
          type: number
          description: HTTP status
        code:
          type: string
          description: Computer-readable error. Use this for comparison.
        short:
          type: string
          description: Human-readable error with a short description of the error.
        long:
          type: string
          description: Verbose explanation of what happened.
